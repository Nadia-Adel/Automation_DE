<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="17" failed="0" total="17" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="539" started-at="2020-01-28T17:29:55Z" finished-at="2020-01-28T17:29:56Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="539" started-at="2020-01-28T17:29:55Z" finished-at="2020-01-28T17:29:56Z">
      <class name="newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404">
        <test-method status="FAIL" signature="baseTest()[pri:0, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="baseTest" is-config="true" duration-ms="0" started-at="2020-01-28T19:29:55Z" finished-at="2020-01-28T19:29:55Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[Connection refused (Connection refused)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Medhats-MacBook-Pro.local', ip: 'fe80:0:0:0:18f6:58b2:1457:b7b1%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_161'
Driver info: driver.version: IOSDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: Connection refused (Connection refused)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'Medhats-MacBook-Pro.local', ip: 'fe80:0:0:0:18f6:58b2:1457:b7b1%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.14.6', java.version: '1.8.0_161'
Driver info: driver.version: IOSDriver
	at io.appium.java_client.remote.AppiumCommandExecutor.lambda$5(AppiumCommandExecutor.java:251)
	at java.util.Optional.orElseGet(Optional.java:267)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:41)
	at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
	at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
	at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
	at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:336)
	at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
	at io.appium.java_client.DefaultGenericMobileDriver.<init>(DefaultGenericMobileDriver.java:37)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:88)
	at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:98)
	at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:90)
	at testBase.MobileTestBase.baseTest(MobileTestBase.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at okhttp3.internal.platform.Platform.connectSocket(Platform.java:129)
	at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.java:245)
	at okhttp3.internal.connection.RealConnection.connect(RealConnection.java:165)
	at okhttp3.internal.connection.StreamAllocation.findConnection(StreamAllocation.java:257)
	at okhttp3.internal.connection.StreamAllocation.findHealthyConnection(StreamAllocation.java:135)
	at okhttp3.internal.connection.StreamAllocation.newStream(StreamAllocation.java:114)
	at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.java:42)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.java:93)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.java:126)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:147)
	at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.java:121)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:200)
	at okhttp3.RealCall.execute(RealCall.java:77)
	at org.openqa.selenium.remote.internal.OkHttpClient.execute(OkHttpClient.java:103)
	at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at io.appium.java_client.remote.AppiumCommandExecutor$1.createSession(AppiumCommandExecutor.java:186)
	at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:217)
	at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:239)
	... 36 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- baseTest -->
        <test-method status="SKIP" signature="Step1_dslLogin()[pri:0, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step1_dslLogin" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step1_dslLogin -->
        <test-method status="SKIP" signature="Step1_LaunchTheAppAndOpenDSLTab()[pri:1, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step1_LaunchTheAppAndOpenDSLTab" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step1_LaunchTheAppAndOpenDSLTab -->
        <test-method status="SKIP" signature="Step2_FailFCIDENTWithErrorCode500()[pri:2, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step2_FailFCIDENTWithErrorCode500" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step2_FailFCIDENTWithErrorCode500 -->
        <test-method status="SKIP" signature="Step3_ValidteBlockingScreen()[pri:3, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step3_ValidteBlockingScreen" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step3_ValidteBlockingScreen -->
        <test-method status="SKIP" signature="Step4_SetFCIDENTWith200AndValidateGDBR()[pri:4, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step4_SetFCIDENTWith200AndValidateGDBR" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step4_SetFCIDENTWith200AndValidateGDBR -->
        <test-method status="SKIP" signature="Step5_LaunchTheAppAndOpenDSLTab()[pri:5, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step5_LaunchTheAppAndOpenDSLTab" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step5_LaunchTheAppAndOpenDSLTab -->
        <test-method status="SKIP" signature="Step6_FailFCIDENTWithErrorCode504()[pri:6, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step6_FailFCIDENTWithErrorCode504" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step6_FailFCIDENTWithErrorCode504 -->
        <test-method status="SKIP" signature="Step7_ValidteBlockingScreen()[pri:7, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step7_ValidteBlockingScreen" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step7_ValidteBlockingScreen -->
        <test-method status="SKIP" signature="Step8_SetFCIDENTWith200AndValidateGDBR()[pri:8, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step8_SetFCIDENTWith200AndValidateGDBR" duration-ms="0" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step8_SetFCIDENTWith200AndValidateGDBR -->
        <test-method status="SKIP" signature="Step9_LaunchTheAppAndOpenDSLTab()[pri:9, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step9_LaunchTheAppAndOpenDSLTab" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step9_LaunchTheAppAndOpenDSLTab -->
        <test-method status="SKIP" signature="Step10_FailFCIDENTWithErrorCode510()[pri:10, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step10_FailFCIDENTWithErrorCode510" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step10_FailFCIDENTWithErrorCode510 -->
        <test-method status="SKIP" signature="Step11_ValidteBlockingScreen()[pri:11, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step11_ValidteBlockingScreen" duration-ms="0" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step11_ValidteBlockingScreen -->
        <test-method status="SKIP" signature="Step12_SetFCIDENTWith200AndValidateGDBR()[pri:12, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step12_SetFCIDENTWith200AndValidateGDBR" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step12_SetFCIDENTWith200AndValidateGDBR -->
        <test-method status="SKIP" signature="Step13_LaunchTheAppAndOpenDSLTab()[pri:13, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step13_LaunchTheAppAndOpenDSLTab" duration-ms="0" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step13_LaunchTheAppAndOpenDSLTab -->
        <test-method status="SKIP" signature="Step14_FailFCIDENTWithErrorCode510()[pri:14, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step14_FailFCIDENTWithErrorCode510" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step14_FailFCIDENTWithErrorCode510 -->
        <test-method status="SKIP" signature="Step15_ValidteBlockingScreen()[pri:15, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step15_ValidteBlockingScreen" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step15_ValidteBlockingScreen -->
        <test-method status="SKIP" signature="Step16_SetFCIDENTWith200AndValidateGDBR()[pri:16, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="Step16_SetFCIDENTWith200AndValidateGDBR" duration-ms="1" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Step16_SetFCIDENTWith200AndValidateGDBR -->
        <test-method status="SKIP" signature="tearDown()[pri:0, instance:newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404@5a8806ef]" name="tearDown" is-config="true" duration-ms="0" started-at="2020-01-28T19:29:56Z" finished-at="2020-01-28T19:29:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- newLoginScenarios.DSLScenarios_Stubs.TC005_Stubs_DSL_PermissionScreen_FailFCIDENTWith500And510And504And404 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
